"""
Примеры конфигурации для разных типов хранилища сессий
"""

# =============================================================================
# КОНФИГУРАЦИЯ ДЛЯ SQLITE (по умолчанию)
# =============================================================================

SQLITE_CONFIG = {
    "SESSION_STORAGE_TYPE": "sqlite",
    "SESSION_EXPIRE_HOURS": 24,
    "SECRET_KEY": "your-secret-key-change-in-production",
    "description": "SQLite - встроенная база данных, идеально для небольших и средних приложений"
}

# =============================================================================
# КОНФИГУРАЦИЯ ДЛЯ ФАЙЛОВОГО ХРАНИЛИЩА
# =============================================================================

FILE_CONFIG = {
    "SESSION_STORAGE_TYPE": "file",
    "SESSION_EXPIRE_HOURS": 24,
    "SESSIONS_DIR": "sessions",
    "SECRET_KEY": "your-secret-key-change-in-production",
    "description": "Файловое хранилище - сессии в JSON файлах, подходит для разработки"
}

# =============================================================================
# КОНФИГУРАЦИЯ ДЛЯ IN-MEMORY ХРАНИЛИЩА
# =============================================================================

MEMORY_CONFIG = {
    "SESSION_STORAGE_TYPE": "memory",
    "SESSION_EXPIRE_HOURS": 1,  # Короткое время для разработки
    "SECRET_KEY": "your-secret-key-change-in-production",
    "description": "In-memory хранилище - сессии в памяти, только для разработки"
}

# =============================================================================
# КОНФИГУРАЦИЯ ДЛЯ ПРОДАКШЕНА (SQLite с улучшениями)
# =============================================================================

PRODUCTION_SQLITE_CONFIG = {
    "SESSION_STORAGE_TYPE": "sqlite",
    "SESSION_EXPIRE_HOURS": 8,  # Короткие сессии для безопасности
    "SECRET_KEY": "CHANGE_THIS_IN_PRODUCTION_USE_ENVIRONMENT_VARIABLE",
    "description": "Продакшен конфигурация SQLite с улучшенной безопасностью"
}

# =============================================================================
# КОНФИГУРАЦИЯ ДЛЯ ВЫСОКИХ НАГРУЗОК (рекомендации)
# =============================================================================

HIGH_LOAD_RECOMMENDATIONS = {
    "database": "PostgreSQL или MySQL вместо SQLite",
    "caching": "Добавить Redis для кеширования сессий",
    "load_balancer": "Sticky sessions для балансировки нагрузки",
    "monitoring": "Мониторинг количества активных сессий",
    "cleanup": "Автоматическая очистка истекших сессий каждые 5 минут",
    "description": "Рекомендации для высоконагруженных систем"
}

# =============================================================================
# ФУНКЦИЯ ДЛЯ ПРИМЕНЕНИЯ КОНФИГУРАЦИИ
# =============================================================================

def apply_config(config: dict):
    """
    Применение конфигурации к приложению
    
    Args:
        config: Словарь с параметрами конфигурации
    """
    import os
    
    # Устанавливаем переменные окружения
    for key, value in config.items():
        if key != "description":
            os.environ[key] = str(value)
    
    print(f"Применена конфигурация: {config.get('description', 'Неизвестная конфигурация')}")

# =============================================================================
# ПРИМЕРЫ ИСПОЛЬЗОВАНИЯ
# =============================================================================

if __name__ == "__main__":
    print("Примеры конфигурации для разных типов хранилища сессий:")
    print()
    
    configs = [
        ("SQLite (по умолчанию)", SQLITE_CONFIG),
        ("Файловое хранилище", FILE_CONFIG),
        ("In-memory хранилище", MEMORY_CONFIG),
        ("Продакшен SQLite", PRODUCTION_SQLITE_CONFIG),
    ]
    
    for name, config in configs:
        print(f"=== {name} ===")
        for key, value in config.items():
            if key != "description":
                print(f"{key}: {value}")
        print(f"Описание: {config['description']}")
        print()
    
    print("=== Рекомендации для высоких нагрузок ===")
    for key, value in HIGH_LOAD_RECOMMENDATIONS.items():
        print(f"{key}: {value}")
